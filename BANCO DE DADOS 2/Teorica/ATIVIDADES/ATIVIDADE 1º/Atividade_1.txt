8.1) Parece que a imagem contém uma tabela relacionada a funções de grupo em SQL. Vou te ajudar a identificar as palavras do vocabulário correspondentes a cada definição:

1. Calcula o valor médio excluindo nulos. 
   - Resposta: AVG

2. Retorna o número de linhas com valores não nulos na expressão.
   - Resposta: COUNT

3. Para dois conjuntos de dados com aproximadamente a mesma média, quanto maior for a dispersão, maior será o desvio padrão.
   - Resposta: STDDEV

4. Operam em conjuntos de linhas para fornecer um resultado por grupo.
   - Resposta: Funções de grupo (GROUP FUNCTIONS)

5. Retorna um valor mínimo ignorando nulos.
   - Resposta: MIN

6. Usada com colunas que armazenam dados numéricos para calcular a dispersão dos dados em torno da média.
   - Resposta: VARIANCE

7. Calcula a soma ignorando valores nulos.
   - Resposta: SUM

8. Retorna o valor máximo ignorando nulos.
   - Resposta: MAX

9. Reunir em uma soma ou total.
   - Resposta: SUM

Se precisar de mais ajuda ou tiver outras perguntas, é só avisar!
_________________________________________________________________________________________________________________________
1º

Suponha que temos uma tabela Funcionarios com a seguinte estrutura:

CREATE TABLE Funcionarios (
    ID INT,
    Nome VARCHAR(50),
    Salario DECIMAL(10, 2),
    Idade INT,
    Departamento VARCHAR(50)
);


E a tabela contém os seguintes dados:

INSERT INTO Funcionarios (ID, Nome, Salario, Idade, Departamento) VALUES
(1, 'Ana', 3500.00, 30, 'TI'),
(2, 'Bruno', 4200.00, 45, 'RH'),
(3, 'Carlos', 3200.00, 28, 'TI'),
(4, 'Daniela', 4100.00, 50, 'Financeiro'),
(5, 'Eduardo', NULL, 37, 'RH');

___________________________________________________________________________

	1. AVG (Média)
O que faz: Calcula a média dos valores em uma coluna, ignorando valores nulos.

Exemplo:
Calcular o salário médio dos funcionários:

SELECT AVG(Salario) FROM Funcionarios;

___________________________________________________________________________

	2. COUNT (Contagem)
O que faz: Conta quantas linhas têm valores não nulos em uma coluna.

Exemplo:
Contar quantos funcionários têm salários cadastrados (ignorando valores nulos):

SELECT COUNT(Salario) FROM Funcionarios;

___________________________________________________________________________

	3. MAX (Máximo)
O que faz: Retorna o valor mais alto em uma coluna, ignorando valores nulos.

Exemplo:
Encontrar o salário mais alto entre os funcionários:

SELECT MAX(Salario) FROM Funcionarios;

___________________________________________________________________________

	4. MIN (Mínimo)
O que faz: Retorna o valor mais baixo em uma coluna, ignorando valores nulos.

Exemplo:
Encontrar o salário mais baixo entre os funcionários:

SELECT MIN(Salario) FROM Funcionarios;

___________________________________________________________________________

	5. STDDEV (Desvio Padrão)
O que faz: Mede como os valores de uma coluna se espalham em relação à média.

Exemplo:
Calcular o desvio padrão dos salários dos funcionários:

SELECT STDDEV(Salario) FROM Funcionarios;

___________________________________________________________________________

	6. SUM (Soma)
O que faz: Soma todos os valores em uma coluna, ignorando valores nulos.

Exemplo:
Somar todos os salários dos funcionários:

SELECT SUM(Salario) FROM Funcionarios;

___________________________________________________________________________

	7. VARIANCE (Variância)
O que faz: Mede a variação dos valores em relação à média.

Exemplo:
Calcular a variância dos salários dos funcionários:

SELECT VARIANCE(Salario) FROM Funcionarios;

___________________________________________________________________________

2º

SELECT ROUND(AVG(COST), 2) AS CustoMedioEventos
FROM D_EVENTS;

___________________________________________________________________________

3º

SELECT ROUND(AVG(SALARY), 2) AS MediaSalarial
FROM F_STAFFS
WHERE MANAGER_ID =19;

___________________________________________________________________________

4º

SELECTSUM(SALARY) AS SomaSalarial
FROM F_STAFFS
WHERE ID IN (12, 9);

___________________________________________________________________________

5º

SELECT
    MIN(SALARY) AS menor_salario,
    MAX(HIRE_DATE) AS data_contratacao_mais_recente,
    MIN(LAST_NAME) AS primeiro_sobrenome,
    MAX(LAST_NAME) AS ultimo_sobrenome
FROM
    EMPLOYEES
WHERE
    DEPARTMENT_ID IN (50, 60);

___________________________________________________________________________

6º

Retorna uma linha

SELECT SUM(order_total) AS total_sales
FROM F_ORDERS;


___________________________________________________________________________

7º

A provável razão é que os valores pagos por hora foram somados diretamente aos salários fixos, 
sem antes converter esses pagamentos para uma base anual ou mensal, o que resultou em uma 
média salarial inflada.

SELECT department_id, ROUND(AVG(salary), 2) AS avg_salary
FROM employees
WHERE job_id NOT IN (SELECT job_id FROM jobs WHERE job_title LIKE '%Hourly%')
GROUP BY department_id;

___________________________________________________________________________

8º

30-Mar-1969

SELECT MIN(birthdate) AS oldest_birthdate
FROM F_STAFFS;

___________________________________________________________________________

9º

SELECT AVG(order_total) AS average_order_total
FROM F_ORDERS
WHERE order_date >= TO_DATE('2002-01-01', 'YYYY-MM-DD') 
  AND order_date <= TO_DATE('2002-12-21', 'YYYY-MM-DD');


___________________________________________________________________________

10º

SELECT MAX(hire_date) AS last_hire_date
FROM EMPLOYEES;

___________________________________________________________________________

11º

O comando "SELECT SUM(OPERATING_COST)" resultará em um valor maior, pois está somando todos os valores, 
enquanto "SELECT AVG(OPERATING_COST)" calcula a média dos custos operacionais.

___________________________________________________________________________

12º


a. Iniciar com FROM event_date ____F___
b. Realizar SELECT SUM(cost) ____V___
c. Realizar SELECT SUM(event_date) ____F___
d. Fazer SELECT description, AVG(cost) AS "Expense" ____V___
e. Usar WHERE MIN(id) = 100 ____V___
f. Executar SELECT MAX(AVG(cost)) ____F___
g. Realizar SELECT MIN(event_date)____V___